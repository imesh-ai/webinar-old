# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for skywalking.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceAccounts:
  oap:
    # By default, create SkyWalking's ServiceAccount. If set to false, you also need to change `serviceAccounts.oap.name` value to a custom ServiceAccount name.
    create: true
    name: ""

imagePullSecrets: []

initContainer:
  image: busybox
  tag: '1.30'

oap:
  name: oap
  image:
    repository: skywalking.docker.scarf.sh/apache/skywalking-oap-server
    tag: '9.2.0'  # Must be set explicitly
    pullPolicy: IfNotPresent
  storageType: postgresql
  ports:
    # add more ports here if you need, for example
    # zabbix: 10051
    grpc: 11800
    rest: 12800
    # zipkinreceiver: 9411
    # zipkinquery: 9412
    metrics: 1234
  replicas: 1
  service:
    type: ClusterIP
  javaOpts: -Xmx2g -Xms2g
  antiAffinity: "soft"
  nodeAffinity: {}
  nodeSelector: {}
  tolerations: []
  resources: {}
    # limits:
    #   cpu: 8
    #   memory: 8Gi
    # requests:
    #   cpu: 8
    #   memory: 4Gi
  livenessProbe: {}
    # tcpSocket:
    #   port: 12800
    # initialDelaySeconds: 5
    # periodSeconds: 20
  startupProbe: {}
  # Time to boot the application is set to:
  # 9 (failureThreshold) * 10 (periodSeconds) = 90 seconds in this case.
    # tcpSocket:
    #   port: 12800
    # failureThreshold: 9
    # periodSeconds: 10
  readinessProbe: {}
    # tcpSocket:
    #   port: 12800
    # initialDelaySeconds: 5
    # periodSeconds: 20
  # podAnnotations:
  #   example: oap-foo
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000
  env:
    # more env, please refer to https://hub.docker.com/r/apache/skywalking-oap-server
    # or https://github.com/apache/skywalking-docker/blob/master/6/6.4/oap/README.md#sw_telemetry
    SW_ENVOY_METRIC: default
    SW_ENVOY_METRIC_SERVICE: true
    SW_ENVOY_METRIC_ALS_HTTP_ANALYSIS: k8s-mesh,mx-mesh,persistence
    SW_ENVOY_METRIC_ALS_TCP_ANALYSIS: k8s-mesh,mx-mesh,persistence
    SW_OTEL_RECEIVER: default
    SW_OTEL_RECEIVER_ENABLED_HANDLERS: "otlp"
    SW_OTEL_RECEIVER_ENABLED_OTEL_RULES: "istio-controlplane,k8s-cluster,k8s-node,k8s-service,oap"
    SW_TELEMETRY: prometheus
    SW_TELEMETRY_PROMETHEUS_HOST: 0.0.0.0
    SW_TELEMETRY_PROMETHEUS_PORT: 1234
    SW_TELEMETRY_PROMETHEUS_SSL_ENABLED: false
    SW_TELEMETRY_PROMETHEUS_SSL_KEY_PATH: ""
    SW_TELEMETRY_PROMETHEUS_SSL_CERT_CHAIN_PATH: ""

  # When 'dynamicConfig.enabled' set to true, enable oap dynamic configuration through k8s configmapï¼Œ
  # Note: The default configmap data is empty, please refer to the detailed documentation (https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/dynamic-config.md)
  # Sync period in seconds. Defaults to 60 seconds.
  dynamicConfig:
    enabled: false
    period: 60
    config: {}
    #  agent-analyzer.default.slowDBAccessThreshold: default:200,mongodb:50
    #  alarm.default.alarm-settings: |
    #   rules:
    #     # Rule unique name, must be ended with `_rule`.
    #     service_resp_time_rule:
    #       metrics-name: service_resp_time
    #       op: ">"
    #       threshold: 1000
    #       period: 10
    #       count: 3
    #       silence-period: 5
    #       Response time of service {name} is more than 1000ms in 3 minutes of last 10 minutes.

ui:
  name: ui
  replicas: 1
  image:
    repository: skywalking.docker.scarf.sh/apache/skywalking-ui
    tag: '9.2.0'  # Must be set explicitly
    pullPolicy: IfNotPresent
  # podAnnotations:
  #   example: oap-foo
  nodeAffinity: {}
  nodeSelector: {}
  tolerations: []
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts: []
    # - skywalking.local
    tls: []
    #  - secretName: skywalking-tls
    #    hosts:
    #      - skywalking.local
  service:
    type: ClusterIP
    # clusterIP: None
    externalPort: 80
    internalPort: 8080
    ## nodePort is the port on each node on which this service is exposed when type=NodePort
    ## Default: auto-allocated port if not specified. 30080 is just an example
    ##
    # nodePort: 30080
    ## External IP addresses of service
    ## Default: nil
    ##
    # externalIPs:
    # - 192.168.0.1
    #
    ## LoadBalancer IP if service.type is LoadBalancer
    ## Default: nil
    ##
    # loadBalancerIP: 10.2.2.2
    # Annotation example: setup ssl with aws cert when service.type is LoadBalancer
    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:EXAMPLE_CERT
    annotations: {}
    ## Limit load balancer source ips to list of CIDRs (where available)
    # loadBalancerSourceRanges: []
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000
  env:

oapInit:
  nodeAffinity: {}
  nodeSelector: {}
  tolerations: []
  extraPodLabels: {}
  # sidecar.istio.io/inject: false

postgresql:
  enabled: true # Whether to start a demo postgresql deployment, don't use this for production.
  config:
    # The hostname of your own postgresql service, this only takes effect when postgresql.enabled is false.
    host: postgresql-service.your-awesome-company.com
  auth:
    username: oap
    password: "123456"
    database: skywalking
  containerPorts:
    postgresql: 5432
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false

elasticsearch:
  enabled: false

satellite:
  name: satellite
  replicas: 1
  enabled: false
  image:
    repository: skywalking.docker.scarf.sh/apache/skywalking-satellite
    tag: null # Must be set explicitly
    pullPolicy: IfNotPresent
  ports:
    grpc: 11800
    prometheus: 1234
    # Disable the pprof port by default, only enabled it when you need to debug the satellite.
    # pprof: 6060
  service:
    type: ClusterIP
  antiAffinity: "soft"
  nodeAffinity: {}
  nodeSelector: {}
  tolerations: []
  resources: {}
    # limits:
    #   cpu: 4
    #   memory: 8Gi
    # requests:
    #   cpu: 4
    #   memory: 4Gi
  podAnnotations:
    # example: oap-foo
  env:
    # more env, please refer to https://skywalking.apache.org/docs/skywalking-satellite/latest/en/setup/readme/#satellite_configyaml
  # Allows you to add any config files in /skywalking/config.
  config: {}
    # satellite_config.yaml: |
    #   key: val
  securityContext: {}
    # runAsUser: 1000
    # runAsGroup: 1000
    # fsGroup: 1000

nameOverride: ""
fullnameOverride: ""
